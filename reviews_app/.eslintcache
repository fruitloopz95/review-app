[{"C:\\Users\\Furquaan\\Desktop\\Reviews\\reviews_app\\src\\index.js":"1","C:\\Users\\Furquaan\\Desktop\\Reviews\\reviews_app\\src\\App.js":"2","C:\\Users\\Furquaan\\Desktop\\Reviews\\reviews_app\\src\\reportWebVitals.js":"3","C:\\Users\\Furquaan\\Desktop\\Reviews\\reviews_app\\src\\MainPage.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":221,"mtime":1607600587133,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":38876,"mtime":1607588120125,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"s0r2cw",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":50,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\Furquaan\\Desktop\\Reviews\\reviews_app\\src\\index.js",[],["20","21"],"C:\\Users\\Furquaan\\Desktop\\Reviews\\reviews_app\\src\\App.js",[],"C:\\Users\\Furquaan\\Desktop\\Reviews\\reviews_app\\src\\reportWebVitals.js",[],"C:\\Users\\Furquaan\\Desktop\\Reviews\\reviews_app\\src\\MainPage.js",["22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71"],"import React from 'react';\r\nimport { Link ,Route , BrowserRouter , useHistory } from 'react-router-dom';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport './MyStyles.css'\r\n\r\nclass MainPage extends React.Component \r\n{\r\n\t//init satte variables\r\n\tconstructor(props) \r\n\t{\r\n   \t\tsuper(props);\r\n   \t\tthis.state = {currentPage : \"Login\" , \r\n   \t\t\t\t\t  usernameInput : \"\" , \r\n   \t\t\t\t\t  passwordInput : \"\" , \r\n   \t\t\t\t\t  isAdmin : false ,\r\n   \t\t\t\t\t  resultsTitle : \"home\",\r\n   \t\t\t\t\t  token : \"\" ,\r\n   \t\t\t\t      latestReviews : [{}] , \r\n   \t\t\t\t\t  myreviews : [{}] ,\r\n   \t\t\t\t\t  adminReviews : [{}] ,\r\n   \t\t\t\t\t  titleInput : \"\" , \r\n   \t\t\t\t\t  categoryInput : \"\" , \r\n   \t\t\t\t\t  genreInput : \"\" , \r\n   \t\t\t\t\t  reviewInput : \"\" , \r\n   \t\t\t\t\t  ratingInput : \"\",\r\n   \t\t\t\t\t  EditTitle : \"\" , \r\n   \t\t\t\t\t  EditCat : \"\" , \r\n   \t\t\t\t\t  EditGenre : \"\" , \r\n   \t\t\t\t\t  EditReview : \"\" , \r\n   \t\t\t\t\t  EditRating : \"\",\r\n   \t\t\t\t\t  EditId : \"\" ,\r\n   \t\t\t\t\t  EditUsername : \"\" , \r\n   \t\t\t\t\t  keyword : \"\" , \r\n   \t\t\t\t\t  myreviewsKeyword : \"\",\r\n   \t\t\t\t\t  newUser : \"\",\r\n   \t\t\t\t\t  newPassword : \"\" ,\r\n   \t\t\t\t\t  DocType : \"\",\r\n   \t\t\t\t\t  SearchDoc : \"\",\r\n   \t\t\t\t\t  displayAdminSearch : false , \r\n   \t\t\t\t\t  EditAdminStatus : false , \r\n   \t\t\t\t\t  UserEditId : \"\"\r\n   \t\t\t\t\t }\r\n    \t\r\n \t}\t\r\n\r\n \t//page navigation\r\n \tGoToSignup()\r\n \t{\r\n \t\tthis.setState({ currentPage : \"Signup\" })\r\n \t}\r\n \tGoToHome()\r\n \t{\r\n \t\tthis.setState({ currentPage : \"Home\" , titleInput : \"\"  , categoryInput : \"\" , genreInput : \"\" ,  reviewInput : \"\" , ratingInput : \"\" })\r\n \t}\r\n \tGoToAddReviews()\r\n \t{\r\n \t\tthis.setState({ currentPage : \"AddReview\" })\r\n \t}\r\n\r\n \t//onClick do callout to get latest reviews \r\n \tGoToMyReviews()\r\n \t{\r\n \t\tfetch('/getMyReviews?username='+ this.state.usernameInput + '&password='+ this.state.passwordInput, {\r\n                method: 'get',\r\n                headers: {'Content-Type': 'application/json'}\r\n            })\r\n            .then(res => res.json())\r\n\t        .then((resp) => {\r\n\t        \t//if none found set an empty record and set page to My reviews\r\n\t        \tif(Object.keys(resp).length == 0)\r\n\t        \t{\r\n\t        \t\tthis.setState({ currentPage : \"MyReviews\" , myreviews : [{Title : \"\" , Category : \"\" , Genre : \"\" , Review : \"\" , Rating : \"\" ,  Username : \"\"}]})\r\n\t        \t}\r\n\t        \telse\r\n\t        \t{\r\n\t        \t\tthis.setState({ currentPage : \"MyReviews\"  , myreviews : resp})\t\r\n\t        \t}\r\n\t        })\r\n\r\n \t\tthis.setState({ currentPage : \"MyReviews\" })\r\n \t}\r\n\r\n \t//onClick get specific document from db using id \r\n \tGoToEditReview(event)\r\n \t{\r\n \t\tlet docId = event.target.id;\r\n \t\t\r\n \t\tfetch('/getReview?DocId='+ docId, {\r\n                method: 'get',\r\n                headers: {'Content-Type': 'application/json'}\r\n            })\r\n            .then(res => res.json())\r\n\t        .then((resp) => {\r\n\t        \t//if document not found display errorn message to user else set response to state and set page to editpage screen\r\n\t        \tif(Object.keys(resp).length == 0)\r\n\t        \t{\r\n\t        \t\talert('Oops something went wrong !');\r\n\t        \t}\r\n\t        \telse\r\n\t        \t{\r\n\t        \t\tconsole.log(resp);\r\n\t        \t\tconsole.log(resp[0].title);\r\n\t        \t\tthis.setState({ currentPage : \"EditReview\"  , EditTitle : resp[0].title , EditCat : resp[0].category , EditGenre : resp[0].genre , EditReview : resp[0].review , EditRating : resp[0].rating , EditId : resp[0]._id , EditUsername : resp[0].username})\t\r\n\t        \t}\r\n\t        })\r\n \t}\r\n\r\n \t//onclick valdiates if user is an admin. If admin then redirects to admin page .if not then displays error messgae to user\r\n \tGoToAdmin()\r\n \t{\r\n \t\tif(this.state.isAdmin)\r\n \t\t{\r\n \t\t\tthis.setState({ currentPage : \"AdminPage\" })\r\n \t\t}\r\n \t\telse\r\n \t\t{\r\n \t\t\talert('Sorry ! Admins only .');\r\n \t\t}\r\n \t\t\r\n \t}\r\n\r\n \t//onClick get specific document from db using id \r\n \tGoToEditUser(event)\r\n \t{\r\n \t\tlet docId = event.target.id;\r\n \t\t\r\n \t\tfetch('/getReview?DocId='+ docId, {\r\n                method: 'get',\r\n                headers: {'Content-Type': 'application/json'}\r\n            })\r\n            .then(res => res.json())\r\n\t        .then((resp) => {\r\n\t        \tif(Object.keys(resp).length == 0)\r\n\t        \t{\r\n\t        \t\talert('Oops something went wrong !');\r\n\t        \t}\r\n\t        \telse\r\n\t        \t{\r\n\t        \t\tconsole.log(resp);\r\n\t        \t\tconsole.log(resp[0].title);\r\n\t        \t\tthis.setState({ currentPage : \"UpdateUser\"  , EditUsername : resp[0].username , EditAdminStatus : resp[0].admin , UserEditId : resp[0]._id })\t\r\n\t        \t}\r\n\t        })\r\n \t\t\r\n \t}\r\n\r\n \t//sets page to login screen and clears all data in state\r\n \tLogOut()\r\n \t{\r\n \t\tthis.setState({ currentPage : \"Login\"  ,  reviews : [{}] , username : \"\" , password : \"\" })\r\n \t}\r\n\r\n\r\n\t//handle user inputs\r\n \thandleUsername(event)\r\n \t{\r\n \t\tthis.setState({ usernameInput : event.target.value })\r\n \t}\r\n\r\n \thandlePassword(event)\r\n \t{\r\n \t\tthis.setState({ passwordInput : event.target.value })\r\n \t}\r\n\r\n \thandleTitleInput(event)\r\n \t{\r\n \t\tthis.setState({ titleInput : event.target.value })\r\n \t}\r\n\r\n \thandleCategoryInput(event)\r\n \t{\r\n \t\tthis.setState({ categoryInput : event.target.value })\r\n \t}\r\n\r\n \thandleGenreInput(event)\r\n \t{\r\n \t\tthis.setState({ genreInput : event.target.value })\r\n \t}\r\n\r\n \thandleReviewInput(event)\r\n \t{\r\n \t\tthis.setState({ reviewInput : event.target.value })\r\n \t}\r\n\r\n \thandleRatingInput(event)\r\n \t{\r\n \t\tthis.setState({ ratingInput : event.target.value })\r\n \t}\r\n\r\n \thandleEditTitle(event)\r\n \t{\r\n \t\tthis.setState({ EditTitle : event.target.value })\r\n \t}\r\n\r\n \thandleEditCategory(event)\r\n \t{\r\n \t\tthis.setState({ EditCat : event.target.value })\r\n \t}\r\n\r\n \thandleEditGenre(event)\r\n \t{\r\n \t\tthis.setState({ EditGenre : event.target.value })\r\n \t}\r\n\r\n \thandleEditReview(event)\r\n \t{\r\n \t\tthis.setState({ EditReview : event.target.value })\r\n \t}\r\n\r\n \thandleEditRating(event)\r\n \t{\r\n \t\tthis.setState({ EditRating : event.target.value })\r\n \t}\r\n\r\n \thandleKeyword(event)\r\n \t{\r\n \t\tthis.setState({ keyword : event.target.value })\r\n \t}\r\n\r\n \thandleMyReviewsKeyword(event)\r\n \t{\r\n \t\tthis.setState({ myreviewsKeyword : event.target.value })\r\n \t}\r\n\r\n \thandleNewUsername(event)\r\n \t{\r\n \t\tthis.setState({ newUser : event.target.value })\r\n \t}\r\n\r\n \thandleNewPassword(event)\r\n \t{\r\n \t\tthis.setState({ newPassword : event.target.value })\r\n \t}\r\n\r\n \thandleDocType(event)\r\n \t{\r\n \t\tthis.setState({ DocType : event.target.value })\r\n \t}\r\n\r\n \thandleSearchDoc(event)\r\n \t{\r\n \t\tthis.setState({ SearchDoc : event.target.value })\r\n \t}\r\n\r\n \thandleAdminStatus(event)\r\n \t{\r\n \t\tthis.setState({ EditAdminStatus : event.target.value })\r\n \t}\r\n\r\n \t\r\n\r\n\r\n \tvalidateUserLogin()\r\n \t{\r\n \t\t//validates if username and password fields are filled in\r\n \t\tif(this.state.usernameInput != \"\" && this.state.passwordInput != \"\")\r\n \t\t{\r\n \t\t\t//does callout to db to find user \r\n \t\t\tfetch('/login?username='+ this.state.usernameInput + '&password='+ this.state.passwordInput , {\r\n                method: 'get',\r\n                headers: {'Content-Type': 'application/json'}\r\n            })\r\n            .then(res => res.json())\r\n\t        .then(\r\n\t            (result) => {\r\n\t            \t//if callout response successful but user not found - update display\r\n                   if (Object.keys(result).length == 0)\r\n                   {\r\n                   \t console.log('empty- user/pass not found')\r\n                   \t alert('Username and password not found.Please try again');\r\n                   \t //this.setState({LoginStatus : \"NotFound\" })\r\n                   \t document.getElementById(\"username\").value = \"\";\r\n                   \t document.getElementById(\"password\").value = \"\";\r\n                   }\r\n                   else\r\n                   {\t\r\n                   \t\t//if user found then do callout to get token and set to state\r\n\t                   \tfetch('/getToken?username='+ this.state.usernameInput + '&password='+ this.state.passwordInput  , {\r\n\t                \tmethod: 'get',\r\n\t                \theaders: {'Content-Type': 'application/json' }\r\n\t                \t})\r\n\t                \t.then(res => res.json())\r\n\t        \t\t\t.then(\r\n\t        \t\t\t (resp) => {\r\n\t        \t\t\t \t//if token callout failed display error to user\r\n\t        \t\t\t \tif(resp.length < 1)\r\n\t        \t\t\t \t{\r\n\t        \t\t\t \t\tconsole.log('error')\r\n\t        \t\t\t \t\talert('Token not received');\r\n\t        \t\t\t \t}\r\n\t        \t\t\t \telse\r\n\t        \t\t\t \t{\r\n\t        \t\t\t \t\t//do callout to get all reviews , set response to state and set page to Home screen\r\n\t        \t\t\t \t\tfetch('/getLatestReviews' , {\r\n\t\t\t\t                method: 'get',\r\n\t\t\t\t                headers: {'Content-Type': 'application/json'}\r\n\t\t\t\t                \r\n\t\t\t\t           \t\t})\r\n\t\t\t\t           \t\t.then(reviewRes => reviewRes.json())\r\n\t\t\t\t           \t\t.then((reviewResp) => \r\n\t\t\t\t           \t\t{\r\n\r\n\t\t\t\t           \t\t\tif (Object.keys(reviewResp).length == 0)\r\n\t\t\t\t                    {\r\n\t\t\t\t\t                   \tconsole.log('no reviews found')   \r\n\t\t\t\t\t                   \tthis.setState({ latestReviews : [{Title : \"\" , Category : \"\" , Genre : \"\" , Review : \"\" , Rating : \"\"  , Username : \"\"}] ,  token : resp.token , currentPage : 'Home' })     \t\r\n\t\t\t\t                    }\r\n\t\t\t\t                    else\r\n\t\t\t\t                    {\r\n\t\t\t\t                    \t\r\n\t\t\t\t                    \tthis.setState({ latestReviews : reviewResp ,  token : resp.token , currentPage : 'Home' , isAdmin : result[0].admin})\r\n\t\t\t\t                   \r\n\t\t\t\t                    }\r\n\t\t\t\t           \t\t})\r\n\t\t\t\t           \t\tthis.setState({ currentPage : 'Home' })\r\n\t        \t\t\t \t}\r\n\t        \t\t\t \t\r\n\t        \t\t\t})\r\n                   }\r\n\t            })\r\n\t            \t\r\n\r\n \t\t}\r\n \t\telse\r\n \t\t{\r\n \t\t\talert('Please fill in username and password and try again');\r\n \t\t}\r\n\r\n \t}\r\n\r\n \tAddUser()\r\n \t{\r\n \t\t//validate if both suername and password fields are filled in \r\n \t\tif( this.state.newUser != \"\" && this.state.newPassword != \"\" )\r\n \t\t{\r\n \t\t\t//do callout to create user\r\n \t\t\tlet data = { username : this.state.newUser , password : this.state.newPassword};\r\n \t\t\tfetch('/createUser', {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json' } ,\r\n                body: JSON.stringify(data)\r\n            })\r\n            .then(res => res.json())\r\n            .then( (result) => {\r\n\r\n            \t\r\n            \talert(result.message);\r\n            \tdocument.getElementById(\"username\").value = \"\";\r\n            \tdocument.getElementById(\"password\").value = \"\";\r\n            \tthis.setState({ currentPage :\"Login\" , newUser : \"\" , newPassword : \"\" })\r\n\r\n            })\r\n \t\t}\r\n \t\telse\r\n \t\t{\r\n \t\t\talert('Please fill in all the fields and try again.');\r\n \t\t}\r\n \t}\r\n\r\n \t\r\n    deleteReview(event)\r\n    {\r\n    \t//get doucment Id \r\n    \tlet docId = event.target.id;\r\n    \t//if id not blank do callout to delete record\r\n \t\tif(docId != \"\")\r\n \t\t{\r\n \t\t\tlet data = {DocId : docId };\r\n\r\n\t \t\tfetch('/deleteReview', {\r\n\t        method: 'delete',\r\n\t        headers: {'Content-Type': 'application/json'},\r\n\t        body: JSON.stringify(data)\r\n\t   \t\t})\r\n\t        .then(res => res.json())\r\n\t        .then((resp) => {\r\n\r\n\t        \tconsole.log(resp);\r\n\t        \t//if record successfully deleted do callout to egt all reviews and set updated list to state\r\n\t        \tif(resp.message == \"review removed !\")\r\n\t        \t{\r\n\t        \t\tfetch('/getMyReviews?username='+ this.state.usernameInput + '&password='+ this.state.passwordInput, {\r\n\t                method: 'get',\r\n\t                headers: {'Content-Type': 'application/json'}\r\n\t\t            })\r\n\t\t            .then(res => res.json())\r\n\t\t\t        .then((resp) => {\r\n\t\t\t        \tif(Object.keys(resp).length == 0)\r\n\t\t\t        \t{\r\n\t\t\t        \t\tthis.setState({ currentPage : \"MyReviews\" , myreviews : [{Title : \"\" , Category : \"\" , Genre : \"\" , Review : \"\" , Rating : \"\" ,  Username : \"\"}]})\r\n\t\t\t        \t}\r\n\t\t\t        \telse\r\n\t\t\t        \t{\r\n\t\t\t        \t\tthis.setState({ currentPage : \"MyReviews\"  , myreviews : resp})\t\r\n\t\t\t        \t}\r\n\t\t\t        })\r\n\r\n\t        \t}\r\n\t        \telse\r\n\t        \t{\r\n\t        \t\talert(resp.message);\r\n\t        \t}\r\n\r\n\t        })\r\n\r\n \t\t}\r\n \t\telse\r\n \t\t{\r\n \t\t\talert('Something went wrong !');\r\n \t\t}\r\n\r\n    }\r\n\r\n    AddNewReview()\r\n    {\r\n    \t//validates inputs are not blank\r\n    \tif(this.state.titleInput == \"\" || this.state.categoryInput == \"\" || this.state.genreInput == \"\" || this.state.ratingInput == \"\" || this.state.reviewInput == \"\" )\r\n    \t{\r\n    \t\talert(\"Please check that all fields are filled in and try again.\");\r\n    \t}\r\n    \telse\r\n    \t{\r\n    \t\tlet username = this.state.usernameInput ;\r\n    \t\tlet password = this.state.passwordInput ;\r\n    \t\tlet title = this.state.titleInput ;\r\n    \t\tlet cat = this.state.categoryInput ;\r\n    \t\tlet gen = this.state.genreInput ;\r\n    \t\tlet rev = this.state.reviewInput ;\r\n    \t\tlet rate = this.state.ratingInput ;\r\n    \t\tlet adm = this.state.isAdmin ;\r\n    \t\tlet tokenVal = this.state.token ;\r\n\r\n    \t\tlet data = {username : username  , password : password , admin : adm , title : title , category : cat ,  genre : gen ,  review : rev ,  rating : rate };\r\n\t\t\t\r\n\t\t\t//call api and pass payload with token then set response to state\r\n\t\t\tfetch('/postreview', {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json' , 'authorization' : 'bearer ' + tokenVal} ,\r\n                body: JSON.stringify(data)\r\n            })\r\n            .then(res => res.json())\r\n            .then( (result) => {\r\n\r\n            \tconsole.log(result.message);\r\n            \t//if successful does callout to get updated list of reviews then sets to state\r\n            \tif(result.message == 'Added!')\r\n            \t{\r\n            \t\tfetch('/getLatestReviews' , {\r\n\t                method: 'get',\r\n\t                headers: {'Content-Type': 'application/json'}\r\n\t           \t\t})\r\n\t           \t\t.then(reviewRes => reviewRes.json())\r\n\t           \t\t.then((reviewResp) => \r\n\t           \t\t{\r\n\r\n\t           \t\t\tif (Object.keys(reviewResp).length == 0)\r\n\t                    {\r\n\t\t                   \tconsole.log('no reviews found')   \r\n\t\t                   \tthis.setState({ latestReviews : [{Title : \"\" , Category : \"\" , Genre : \"\" , Review : \"\" , Rating : \"\"  , Username : \"\"}] , currentPage : 'Home' ,\r\n\t\t                   \t\t\t\t\ttitleInput : \"\"  , categoryInput : \"\" , genreInput : \"\" ,  reviewInput : \"\" , ratingInput : \"\" })     \t\r\n\t                    }\r\n\t                    else\r\n\t                    {\r\n\t                    \tthis.setState({ latestReviews : reviewResp , currentPage : 'Home' , titleInput : \"\"  , categoryInput : \"\" , genreInput : \"\" ,  reviewInput : \"\" , ratingInput : \"\"  })\r\n\t                    }\r\n\t           \t\t})\r\n\t           \t\t\r\n            \t}\r\n\r\n            })\r\n    \t}\r\n    }\r\n\r\n    UpdateReview()\r\n    {\t\r\n    \t//validate if all fields are filled in\r\n    \tif( this.state.EditTitle == \"\" ||  this.state.EditCat == \"\" ||  this.state.EditGenre == \"\" ||  this.state.EditReview == \"\" ||  this.state.EditRating == \"\" )\r\n    \t{\r\n    \t\talert(\"All fields are required. Please fill in fields and try again.\");\r\n    \t}\r\n    \telse\r\n    \t{\r\n    \t\t// does callout to update record\r\n    \t\tlet tokenVal = this.state.token ;\r\n    \t\tlet data = {DocId : this.state.EditId , edTitle : this.state.EditTitle , edCat : this.state.EditCat , edGenre : this.state.EditGenre , edReview : this.state.EditReview , edRating : this.state.EditRating , username : this.state.usernameInput , password : this.state.passwordInput};\r\n    \t\tfetch('/updateReview', {\r\n                method: 'put',\r\n                headers: {'Content-Type': 'application/json' } ,\r\n                body: JSON.stringify(data)\r\n            })\r\n            .then(res => res.json())\r\n            .then( (result) => {\r\n\r\n            \tconsole.log(result.message);\r\n            \t//if successful does callout to get updated list of reviews and set to state\r\n            \tif(result.message == 'Updated!')\r\n            \t{\r\n            \t\talert('Update successful !');\r\n\r\n            \t\tfetch('/getMyReviews?username='+ this.state.usernameInput + '&password='+ this.state.passwordInput, {\r\n\t                method: 'get',\r\n\t                headers: {'Content-Type': 'application/json'}\r\n\t                //body: JSON.stringify(data)\r\n\t\t            })\r\n\t\t            .then(res => res.json())\r\n\t\t\t        .then((resp) => {\r\n\t\t\t        \tif(Object.keys(resp).length == 0)\r\n\t\t\t        \t{\r\n\t\t\t        \t\tthis.setState({ currentPage : \"MyReviews\" , myreviews : [{Title : \"\" , Category : \"\" , Genre : \"\" , Review : \"\" , Rating : \"\" ,  Username : \"\"}]})\r\n\t\t\t        \t}\r\n\t\t\t        \telse\r\n\t\t\t        \t{\r\n\t\t\t        \t\tthis.setState({ currentPage : \"MyReviews\"  , myreviews : resp})\t\r\n\t\t\t        \t}\r\n\t\t\t        })\r\n            \t}\r\n\r\n            })\r\n    \t}\r\n    }\r\n\r\n    SearchKeyword()\r\n    {\r\n    \t//onclick gets keyword from state and does callout to get all records containing keyword and set to state\r\n    \tfetch('/Search?keyword=' + this.state.keyword , {\r\n        method: 'get',\r\n        headers: {'Content-Type': 'application/json'}\r\n        })\r\n   \t\t.then(reviewRes => reviewRes.json())\r\n   \t\t.then((reviewResp) => \r\n   \t\t{\r\n\r\n   \t\t\tif (Object.keys(reviewResp).length == 0)\r\n            {\r\n               \tconsole.log('no reviews found')  \r\n               \talert('No matches found!');  \t\r\n            }\r\n            else\r\n            {\r\n            \tthis.setState({ latestReviews : reviewResp , resultsTitle : \"resultsSet\"})\r\n            }\r\n   \t\t})\r\n    \t\r\n    }\r\n\r\n    SearchMyReviews()\r\n    {\r\n    \t////do callout to search keyword in my reviews and set response to state\r\n    \tfetch('/SearchMyReviews?keyword=' + this.state.myreviewsKeyword + '&username='+ this.state.usernameInput + '&password='+ this.state.passwordInput  , {\r\n        method: 'get',\r\n        headers: {'Content-Type': 'application/json'}\r\n   \t\t})\r\n   \t\t.then(reviewRes => reviewRes.json())\r\n   \t\t.then((reviewResp) => \r\n   \t\t{\r\n\r\n   \t\t\tif (Object.keys(reviewResp).length == 0)\r\n            {\r\n               \tconsole.log('no reviews found')  \r\n               \talert('No matches found !');        \t   \t\r\n            }\r\n            else\r\n            {\r\n            \tthis.setState({ myreviews : reviewResp })\r\n            \tconsole.log(this.state.myreviews);\r\n            }\r\n   \t\t})\r\n    }\r\n\r\n\r\n\r\n    //function to render all current user records\r\n    renderMyReviews()\r\n \t{\r\n      return this.state.myreviews.map((review, index) => {\r\n         \r\n         return (\r\n            <div className = \"ReviewDiv\">\r\n\r\n  \t\t\t\t<h1>{review.title}</h1>\r\n  \t\t\t\t<h3>{review.category}</h3>\r\n  \t\t\t\t<h3>{review.genre}</h3>\r\n  \t\t\t\t<p>\r\n  \t\t\t\t   {review.review}\r\n  \t\t\t\t</p>\r\n  \t\t\t\t\r\n  \t\t\t\t\tMy rating : {review.rating} /10\r\n  \t\t\t\t\r\n  \t\t\t\t<hr/>\r\n  \t\t\t\t\r\n  \t\t\t\t<div className = \"MyActions\">\r\n\t            \t<button id = {review._id} onClick = {this.GoToEditReview.bind(this)} >edit</button>\r\n\t            \t<button id = {review._id} onClick = {this.deleteReview.bind(this)} >delete</button>\r\n\t            </div>\r\n\r\n  \t\t\t</div>\r\n         )\r\n      })\r\n    }\r\n\r\n    //function to render all reviews \r\n \trenderLatestReview()\r\n \t{\r\n \t\tif(Object.keys(this.state.latestReviews).length != 0)\r\n \t\t{\r\n \t\t\treturn this.state.latestReviews.map((review, index) => {\r\n         \r\n\t         return (\r\n\t            <div className = \"ReviewDiv\">\r\n\t  \t\t\t\t<h1>{review.title}</h1>\r\n\t  \t\t\t\t<h3>{review.category}</h3>\r\n\t  \t\t\t\t<h3>{review.genre}</h3>\r\n\t  \t\t\t\t<p>\r\n\t  \t\t\t\t   {review.review}\r\n\t  \t\t\t\t</p>\r\n\t  \t\t\t\t\t\r\n\t  \t\t\t\t<hr/>\t\r\n\r\n\t\t\t\t\t<div className = \"UsernameRating\">\r\n\t\t\t\t\t\t{review.username} &nbsp;\r\n\t\t\t\t\t\t{review.rating} /10\r\n\t\t\t\t\t</div>\r\n\t  \t\t\t\t\r\n\t  \t\t\t\t<hr/>\t\r\n\t\t\t\r\n\t  \t\t\t</div>\r\n\t         )\r\n\t      })\r\n \t\t}\r\n \t\telse\r\n \t\t{\r\n \t\t\talert(Object.keys(this.state.latestReviews).length);\r\n \t\t}\r\n      \r\n    }\r\n\r\n    //based on search status sets title on home page \r\n    setResultsTitile()\r\n    {\r\n    \t\r\n    \t\tif(this.state.resultsTitle == \"home\")\r\n    \t\t{\r\n    \t\t\treturn (\r\n    \t\t\t<div>\r\n  \t\t\t\t\twhat's new\r\n  \t\t\t    </div>\r\n  \t\t\t    )\r\n    \t\t}\r\n\t\t\telse if(this.state.resultsTitle == \"resultsSet\")\r\n\t\t\t{\r\n\t\t\t\treturn (\r\n    \t\t\t<div>\r\n  \t\t\t\t\tResults\r\n  \t\t\t    </div>\r\n  \t\t\t    )\r\n\t\t\t}    \t\r\n    }\r\n\r\n\r\n\r\n    //function to render all records - admin access \r\n    renderAdminRecords()\r\n \t{\r\n \t\tif(this.state.displayAdminSearch)\r\n \t\t{\t//if admin searches user \r\n \t\t\tif(this.state.DocType == \"user\" )\r\n\t \t\t{\r\n\t \t\t\treturn this.state.adminReviews.map((review, index) => {\r\n\t         \r\n\t\t         return (\r\n\t\t            <div className = \"ReviewDiv\">\r\n\r\n\t\t  \t\t\t\t<h1>{review.username}</h1>\r\n\t\t  \t\t\t\t<h3>Admin user : {String(review.admin)}</h3>\r\n\r\n\t\t  \t\t\t\t\r\n\t\t  \t\t\t\t<hr/>\r\n\t\t  \t\t\t\t\r\n\t\t  \t\t\t\t<div className = \"MyActions\">\r\n\t\t\t            \t<button id = {review._id} onClick = {this.GoToEditUser.bind(this)} >edit</button>\r\n\t\t\t            \t<button id = {review._id} onClick = {this.deleteReview.bind(this)} >delete</button>\r\n\t\t\t            </div>\r\n\r\n\t\t  \t\t\t</div>\r\n\t\t         )\r\n\t\t      })\r\n\t \t\t}\r\n\t \t\telse \r\n\t \t\t{//if admin searches records\r\n\t \t\t\treturn this.state.adminReviews.map((review, index) => {\r\n\t         \r\n\t\t         return (\r\n\t\t            <div className = \"ReviewDiv\">\r\n\r\n\t\t  \t\t\t\t<h1>{review.title}</h1>\r\n\t\t  \t\t\t\t<h3>{review.category}</h3>\r\n\t\t  \t\t\t\t<h3>{review.genre}</h3>\r\n\t\t  \t\t\t\t<p>\r\n\t\t  \t\t\t\t   {review.review}\r\n\t\t  \t\t\t\t</p>\r\n\t\t  \t\t\t\t\t\r\n\t\t  \t\t\t\t\tUser : {review.username}\r\n\t\t  \t\t\t\t\t<br/>\r\n\t\t  \t\t\t\t\tMy rating : {review.rating} /10\r\n\t\t  \t\t\t\t\r\n\t\t  \t\t\t\t<hr/>\r\n\t\t  \t\t\t\t\r\n\t\t  \t\t\t\t<div className = \"MyActions\">\r\n\t\t\t            \t<button id = {review._id} onClick = {this.GoToEditReview.bind(this)} >edit</button>\r\n\t\t\t            \t<button id = {review._id} onClick = {this.deleteReview.bind(this)} >delete</button>\r\n\t\t\t            </div>\r\n\r\n\t\t  \t\t\t</div>\r\n\t\t         )\r\n\t\t      })\r\n\t \t\t}\r\n \t\t}   \r\n    }\r\n\r\n    AdminSearch()\r\n    {\r\n    \t//onclick gets all records and sets to state\r\n    \tif( this.state.DocType == \"\")\r\n    \t{\r\n    \t\talert(\"Please select either user or record and try again.\");\r\n    \t}\r\n\r\n\t\tfetch('/AdminSearch?keyword=' + this.state.SearchDoc + '&docType=' + this.state.DocType , {\r\n        method: 'get',\r\n        headers: {'Content-Type': 'application/json'}\r\n   \t\t})\r\n   \t\t.then(reviewRes => reviewRes.json())\r\n   \t\t.then((reviewResp) => \r\n   \t\t{\r\n\r\n   \t\t\tif (Object.keys(reviewResp).length == 0)\r\n            {\r\n               \tconsole.log('no reviews found')  \r\n               \talert('No matches found !');        \t   \t\r\n            }\r\n            else\r\n            {\r\n            \tthis.setState({ adminReviews : reviewResp , displayAdminSearch : true })\r\n            }\r\n   \t\t})\r\n    }\r\n\r\n    UpdateUser()\r\n    {\r\n    \t//does callout to update user's admin status \r\n    \tlet data = { isAdmin : this.state.EditAdminStatus , DocId : this.state.UserEditId };\r\n    \t\tfetch('/updateUser', {\r\n                method: 'put',\r\n                headers: {'Content-Type': 'application/json' } ,\r\n                body: JSON.stringify(data)\r\n            })\r\n            .then(res => res.json())\r\n            .then( (result) => {\r\n\r\n            \tconsole.log(result.message);\r\n\r\n            \tif(result.message == 'Updated!')\r\n            \t{\r\n            \t\talert('Update successful !');\r\n            \t\tthis.setState({ currentPage : \"AdminPage\" , adminReviews : [{}] })\r\n            \t}\r\n\r\n            })\r\n    }\r\n\r\n    //render different components based on state value\r\n \trender() \r\n \t{\r\n \t\tif(this.state.currentPage == \"Login\")\r\n \t\t{\r\n \t\t\treturn (\r\n\t\t      <div className = \"LoginContainer\">\t\t\r\n\r\n\t\t      \t\t<h2>The review space </h2>\r\n\t\t      \t\t\r\n\t\t\t\t    <div className = \"myInputSection\">\r\n\t\t\t\t    \t<input type = \"text\" id = \"username\" className = \"inpField\" placeholder = \"Username\" onChange = {this.handleUsername.bind(this)}/>\r\n\t\t\t\t    \t<br/>\r\n\t\t\t\t    \t<input type = \"text\" id = \"password\" className = \"inpField\" placeholder = \"Password\" onChange = {this.handlePassword.bind(this)}/>\r\n\t\t\t\t    \t<br/>\r\n\t\t\t\t    \t<button className = \"Login\"  onClick = {this.validateUserLogin.bind(this)}> Login </button>\r\n\t\t\t\t    \t<br/>\r\n\t\t\t\t    \tor\r\n\t\t\t\t    \t<br/>\r\n\t\t\t\t        <button className = \"Signup\"  onClick = {this.GoToSignup.bind(this)}> Signup </button>  \r\n\r\n\t\t\t\t    </div>\r\n\t\t      </div>\t\t\r\n    \t\t);\r\n \t\t}\r\n\r\n \t\telse if(this.state.currentPage == \"Signup\")\r\n \t\t{\r\n \t\t\treturn (\r\n \t\t\t\t<div className = \"LoginContainer\">\t\t\r\n\r\n\t      \t\t<h2>The review space </h2>\r\n\t      \t\t\r\n\t\t\t    <div className = \"myInputSection\">\r\n\t\t\t    \t<input type = \"text\" id = \"username\" className = \"inpField\" placeholder = \"Username\"  onChange = {this.handleNewUsername.bind(this)}/>\r\n\t\t\t    \t<br/>\r\n\t\t\t    \t<input type = \"text\" id = \"password\" className = \"inpField\" placeholder = \"Password\"  onChange = {this.handleNewPassword.bind(this)}/>\r\n\t\t\t    \t<br/>\r\n\t\t\t    \t<div className = \"Login\">\r\n\t\t\t\t    \t<button className = \"Signup\" onClick = {this.AddUser.bind(this)} > Signup </button>\t\t\t    \t\r\n\t\t\t\t        <button className = \"Cancel\" onClick = {this.LogOut.bind(this)}> Cancel </button> \r\n\t\t\t        </div>\r\n\t\t\t    </div>\r\n\t       \t\t</div>\r\n\t       \t);\t\t\r\n \t\t}\r\n\r\n \t\telse if(this.state.currentPage == \"Home\")\r\n \t\t{\r\n \t\t\treturn (\r\n \t\t\t\t<div className = \"Container\">\t\t\r\n\r\n\t\t      \t\t<div className = \"HomeHeader\">\r\n\t\t\t      \t\t<div className = \"PageTitle\">\r\n\t\t\t      \t\t\tWelcome {this.state.usernameInput}\r\n\t\t\t      \t\t</div>\r\n\t\t\t      \t\t<div className = \"NavLinks\">\r\n\t\t\t      \t\t\t<div>\r\n\t\t\t      \t\t\t\t<button onClick = {this.GoToMyReviews.bind(this)} >my reviews</button> \r\n\t\t\t      \t\t\t\t<button onClick = {this.GoToAdmin.bind(this)} >Admin</button> \r\n\t\t\t      \t\t\t\t<button onClick = {this.LogOut.bind(this)} >Sign out</button>\r\n\t\t\t      \t\t\t</div>\r\n\t\t\t      \t\t</div>\r\n\t\t      \t\t</div>\r\n\r\n\t\t     \t \t<div className = \"Body\">\r\n\r\n\t\t\t      \t\t<div className = \"SearchComponent\">\r\n\t\t\t      \t\t\t<input type = \"text\" id = \"keyword\" className = \"HomeSearch\" placeholder = \"Enter keyword\" onChange = {this.handleKeyword.bind(this)}/>\r\n\t\t\t\t\t    \t<br/>\r\n\t\t\t\t\t    \t<button className = \"Search\" onClick = {this.SearchKeyword.bind(this)} > Search </button>\r\n\t\t\t      \t\t</div>\r\n\r\n\t\t\t      \t\t<br/>\r\n\r\n\t\t\t      \t\t<div className = \"ResultsTitile\">\r\n\t\t\t      \t\t\t{this.setResultsTitile()}\r\n\t\t\t      \t\t\t<hr/>\r\n\t\t\t      \t\t</div>\r\n\r\n\t\t\t      \t\t<div className = \"ReviewsSection\">\r\n\t\t\t      \t\t\t{this.renderLatestReview()}\r\n\t\t\t      \t\t</div>\r\n\r\n\t\t     \t \t</div>\r\n\r\n\t\t     \t \t<div className = \"Footer\">\r\n\t\t\t      \t\t<div className = \"AddButton\">\r\n\t\t\t      \t\t\t<button className = \"TheAddNewReveiwButton\" onClick = {this.GoToAddReviews.bind(this)} >Add review</button>\r\n\t\t\t      \t\t</div>\r\n\t\t      \t\t</div>\r\n\r\n\t    \t  </div>\r\n\t    \t);\t\t\r\n \t\t}\r\n\r\n \t\telse if(this.state.currentPage == \"AddReview\")\r\n \t\t{\r\n \t\t\treturn (\r\n\t\t      <div className = \"AddReviewContainer\">\t\t\r\n\r\n\t\t      \t<div className = \"HomeHeader\">\r\n\t\t      \t\t<div className = \"PageTitle\">\r\n\t\t      \t\t\tAdd review\r\n\t\t      \t\t</div>\r\n\t\t      \t\t<div className = \"NavLinks\">\r\n\t\t      \t\t\t<div>\r\n\t\t      \t\t\t\t<button onClick = {this.GoToHome.bind(this)} > Home </button> \r\n\t\t      \t\t\t\t<button onClick = {this.GoToAdmin.bind(this)} >Admin</button> \r\n\t\t      \t\t\t\t<button onClick = {this.LogOut.bind(this)} >Sign out</button>  \r\n\t\t      \t\t\t</div>\r\n\t\t      \t\t</div>\r\n\t\t      \t</div>\r\n\r\n\t\t      \t<div className = \"AddReviewBody\">\r\n\r\n\t\t      \t\t<div className = \"myInputSection\">\r\n\r\n\t\t      \t\t\t<table>\r\n\t\t      \t\t\t\t<tr>\r\n\t\t      \t\t\t\t\t<td>\r\n\t\t      \t\t\t\t\t\t<input type = \"text\" id = \"Title\" className = \"inpField\" placeholder = \"Title\" onChange = {this.handleTitleInput.bind(this)} />\r\n\t\t      \t\t\t\t\t</td>\r\n\t\t      \t\t\t\t\t<td>\r\n\t\t      \t\t\t\t\t\tmy rating: \r\n\t\t      \t\t\t\t\t\t<select onChange = {this.handleRatingInput.bind(this)}>\r\n\t\t\t\t\t\t\t\t\t    <option></option>\r\n\t\t\t\t                    \t<option value = \"1\">1</option>\r\n\t\t\t\t                    \t<option value = \"2\">2</option>\r\n\t\t\t\t                    \t<option value = \"3\">3</option>\r\n\t\t\t\t                    \t<option value = \"4\">4</option>\r\n\t\t\t\t                    \t<option value = \"5\">5</option>\r\n\t\t\t\t                    \t<option value = \"6\">6</option>\r\n\t\t\t\t                    \t<option value = \"7\">7</option>\r\n\t\t\t\t                    \t<option value = \"8\">8</option>\r\n\t\t\t\t                    \t<option value = \"9\">9</option>\r\n\t\t\t\t                    \t<option value = \"10\">10</option>\r\n\t\t\t\t                    </select>\r\n\t\t\t\t      \t\t\t</td>\r\n\t\t      \t\t\t\t\t\r\n\t\t      \t\t\t\t</tr>\r\n\t\t      \t\t\t\t<tr>\r\n\t\t      \t\t\t\t\t<td>\r\n\t\t      \t\t\t\t\t\t<select className = \"SearchConditions\" onChange = {this.handleCategoryInput.bind(this)}>\r\n\t\t\t\t\t\t\t\t\t    <option>Select Category</option>\r\n\t\t\t\t                    \t<option value = \"Movies\">Movies</option>\r\n\t\t\t\t                    \t<option value = \"Series\">Series</option>\r\n\t\t\t\t                    \t<option value = \"Documentary\">Documentary</option>\r\n\t\t\t\t                    \t<option value = \"Anime\">Anime</option>\r\n\t\t\t\t                    \t<option value = \"Other\">Other</option>\r\n\t\t\t\t                    </select>\r\n\t\t      \t\t\t\t\t</td>\r\n\t\t      \t\t\t\t\t<td></td>\r\n\t\t      \t\t\t\t</tr>\r\n\t\t      \t\t\t\t<tr>\r\n\t\t      \t\t\t\t\t<td>\r\n\t\t\t\t\t      \t\t\t<select className = \"SearchConditions\" onChange = {this.handleGenreInput.bind(this)}>\r\n\t\t\t\t\t\t\t\t\t    <option>Select Genre</option>\r\n\t\t\t\t                    \t<option value = \"Action\">Action</option>\r\n\t\t\t\t                    \t<option value = \"Adventure\">Adventure</option>\r\n\t\t\t\t                    \t<option value = \"Comedy\">Comedy</option>\r\n\t\t\t\t                    \t<option value = \"Crime\">Crime</option>\r\n\t\t\t\t                    \t<option value = \"Drama\">Drama</option>\r\n\t\t\t\t                    \t<option value = \"Fantasy\">Fantasy</option>\r\n\t\t\t\t                    \t<option value = \"Horror\">Horror</option>\r\n\t\t\t\t                    \t<option value = \"Mystery\">Mystery</option>\r\n\t\t\t\t                    \t<option value = \"Thriller\">Thriller</option>\r\n\t\t\t\t                    \t<option value = \"Western\">Western</option>\r\n\t\t\t\t                    \t<option value = \"Other\">Other</option>\r\n\t\t\t\t                    </select>\r\n\t\t      \t\t\t\t\t</td>\r\n\t\t      \t\t\t\t\t<td></td>\r\n\t\t      \t\t\t\t</tr>\r\n\t\t      \t\t\t</table>\r\n\r\n\t\t\t\t\t\t<div className = \"ReviewArea\">\t\t\t\t    \t\r\n\t\t\t\t\t    \t<textarea type = \"text\" id = \"Genre\" className = \"inpField\" placeholder = \"Add review here...\" onChange = {this.handleReviewInput.bind(this)}/>\r\n\t\t\t\t\t    \t<br/>\r\n\t\t\t\t\t\t    \t<button onClick = {this.AddNewReview.bind(this)}  > Post review ! </button>\r\n\t\t\t\t\t\t    \t<button onClick = {this.GoToHome.bind(this)}  > Cancel </button>\r\n\t\t\t\t\t    \t</div>\r\n\t\t\t\t    </div>\r\n\t\t      \t\t\r\n\t\t      \t</div>\r\n\r\n\t\t      </div>\t\t\r\n\t    \t);\r\n \t\t}\r\n\r\n    \telse if(this.state.currentPage == \"MyReviews\")\r\n \t\t{\r\n \t\t\treturn (\r\n\t\t      <div className = \"Container\">\t\t\r\n\r\n\t\t      \t<div className = \"HomeHeader\">\r\n\t\t      \t\t<div className = \"PageTitle\">\r\n\t\t      \t\t\tMy Reviews\r\n\t\t      \t\t</div>\r\n\t\t      \t\t<div className = \"NavLinks\">\r\n\t\t      \t\t\t<div>\r\n\t\t      \t\t\t\t<button onClick = {this.GoToHome.bind(this)}> Home </button> \r\n\t\t      \t\t\t\t<button onClick = {this.GoToAdmin.bind(this)} >Admin</button> \r\n\t\t      \t\t\t\t<button onClick = {this.LogOut.bind(this)}>Sign out</button> \r\n\t\t      \t\t\t</div>\r\n\t\t      \t\t</div>\r\n\t\t      \t</div>\r\n\r\n\t\t      \t<div className = \"Body\">\r\n\r\n\t\t      \t\t<div className = \"SearchComponent\">\r\n\t\t\t      \t\t\t<input type = \"text\" id = \"keyword\" className = \"HomeSearch\" placeholder = \"Enter keyword\" onChange = {this.handleMyReviewsKeyword.bind(this)}/>\r\n\t\t\t      \t\t\t\r\n\t\t\t\t\t    \t<br/>\r\n\t\t\t\t\t    \t<button className = \"Search\" onClick = {this.SearchMyReviews.bind(this)} > Search </button>\r\n\t\t\t      \t</div>\r\n\r\n\t\t\t\t    <div className = \"ReviewsSection\">\r\n\t\t\t      \t\t\t{this.renderMyReviews()}\r\n\t\t\t      \t</div>\r\n\t\t      \t\t\r\n\t\t      \t</div>\r\n\r\n\t\t      \t<div className = \"Footer\">\r\n\t\t      \t\t<div className = \"AddButton\">\r\n\t\t      \t\t \t<button className = \"TheAddNewReveiwButton\" onClick = {this.GoToAddReviews.bind(this)}>Add review</button> \r\n\t\t      \t\t</div>\r\n\t\t      \t</div>\r\n\t\t      \r\n\r\n\t\t      </div>\t\t\r\n\t    \t);\r\n \t\t}\r\n\r\n \t\telse if(this.state.currentPage == \"EditReview\")\r\n \t\t{\r\n \t\t\treturn (\r\n\t\t      <div className = \"AddReviewContainer\">\t\t\r\n\r\n\t\t      \t<div className = \"HomeHeader\">\r\n\t\t      \t\t<div className = \"PageTitle\">\r\n\t\t      \t\t\tEdit review\r\n\t\t      \t\t</div>\r\n\t\t      \t\t<div className = \"NavLinks\">\r\n\t\t      \t\t\t<div>\r\n\t\t      \t\t\t\t<button onClick = {this.GoToHome.bind(this)} > Home </button> \r\n\t\t      \t\t\t\t<button onClick = {this.GoToAdmin.bind(this)} >Admin</button> \r\n\t\t      \t\t\t\t<button onClick = {this.LogOut.bind(this)} >Sign out</button>  \r\n\t\t      \t\t\t</div>\r\n\t\t      \t\t</div>\r\n\t\t      \t</div>\r\n\r\n\t\t      \t<div className = \"AddReviewBody\">\r\n\r\n\t\t      \t\t<div className = \"myInputSection\">\r\n\r\n\t\t      \t\t\t<table>\r\n\t\t      \t\t\t\t<tr>\r\n\t\t      \t\t\t\t\t<td>\r\n\t\t      \t\t\t\t\t\t<input type = \"text\" id = \"Title\" className = \"inpField\" placeholder = \"Title\" value = {this.state.EditTitle} onChange = {this.handleEditTitle.bind(this)}/>\r\n\t\t      \t\t\t\t\t</td>\r\n\t\t      \t\t\t\t\t<td>\r\n\t\t      \t\t\t\t\t\tmy rating: \r\n\t\t      \t\t\t\t\t\t<select value = {this.state.EditRating} onChange = {this.handleEditRating.bind(this)} >\r\n\t\t\t\t\t\t\t\t\t    <option></option>\r\n\t\t\t\t                    \t<option value = \"1\">1</option>\r\n\t\t\t\t                    \t<option value = \"2\">2</option>\r\n\t\t\t\t                    \t<option value = \"3\">3</option>\r\n\t\t\t\t                    \t<option value = \"4\">4</option>\r\n\t\t\t\t                    \t<option value = \"5\">5</option>\r\n\t\t\t\t                    \t<option value = \"6\">6</option>\r\n\t\t\t\t                    \t<option value = \"7\">7</option>\r\n\t\t\t\t                    \t<option value = \"8\">8</option>\r\n\t\t\t\t                    \t<option value = \"9\">9</option>\r\n\t\t\t\t                    \t<option value = \"10\">10</option>\r\n\t\t\t\t                    </select>\r\n\t\t\t\t      \t\t\t</td>\r\n\t\t      \t\t\t\t\t\r\n\t\t      \t\t\t\t</tr>\r\n\t\t      \t\t\t\t<tr>\r\n\t\t      \t\t\t\t\t<td>\r\n\t\t      \t\t\t\t\t\t<select className = \"SearchConditions\" value = {this.state.EditCat} onChange = {this.handleEditCategory.bind(this)}>\r\n\t\t\t\t\t\t\t\t\t    <option>Select Category</option>\r\n\t\t\t\t                    \t<option value = \"Movies\">Movies</option>\r\n\t\t\t\t                    \t<option value = \"Series\">Series</option>\r\n\t\t\t\t                    \t<option value = \"Documentary\">Documentary</option>\r\n\t\t\t\t                    \t<option value = \"Anime\">Anime</option>\r\n\t\t\t\t                    \t<option value = \"Other\">Other</option>\r\n\t\t\t\t                    </select>\r\n\t\t      \t\t\t\t\t</td>\r\n\t\t      \t\t\t\t\t<td></td>\r\n\t\t      \t\t\t\t</tr>\r\n\t\t      \t\t\t\t<tr>\r\n\t\t      \t\t\t\t\t<td>\r\n\t\t\t\t\t      \t\t\t<select className = \"SearchConditions\" value = {this.state.EditGenre} onChange = {this.handleEditGenre.bind(this)}>\r\n\t\t\t\t\t\t\t\t\t    <option>Select Genre</option>\r\n\t\t\t\t                    \t<option value = \"Action\">Action</option>\r\n\t\t\t\t                    \t<option value = \"Adventure\">Adventure</option>\r\n\t\t\t\t                    \t<option value = \"Comedy\">Comedy</option>\r\n\t\t\t\t                    \t<option value = \"Crime\">Crime</option>\r\n\t\t\t\t                    \t<option value = \"Drama\">Drama</option>\r\n\t\t\t\t                    \t<option value = \"Fantasy\">Fantasy</option>\r\n\t\t\t\t                    \t<option value = \"Horror\">Horror</option>\r\n\t\t\t\t                    \t<option value = \"Mystery\">Mystery</option>\r\n\t\t\t\t                    \t<option value = \"Thriller\">Thriller</option>\r\n\t\t\t\t                    \t<option value = \"Western\">Western</option>\r\n\t\t\t\t                    \t<option value = \"Other\">Other</option>\r\n\t\t\t\t                    </select>\r\n\t\t      \t\t\t\t\t</td>\r\n\t\t      \t\t\t\t\t<td></td>\r\n\t\t      \t\t\t\t</tr>\r\n\t\t      \t\t\t</table>\r\n\r\n\t\t\t\t\t\t<div className = \"ReviewArea\">\t\t\t\t    \t\r\n\t\t\t\t\t    \t<textarea type = \"text\" id = \"Genre\" className = \"inpField\" placeholder = \"Genre\" value = {this.state.EditReview} onChange = {this.handleEditReview.bind(this)}/>\r\n\t\t\t\t\t    \t<br/>\r\n\t\t\t\t\t\t    \t<button onClick = {this.UpdateReview.bind(this)}  > Update review ! </button>\r\n\t\t\t\t\t\t    \t<button onClick = {this.GoToMyReviews.bind(this)}  > Cancel </button>\r\n\t\t\t\t\t    \t</div>\r\n\t\t\t\t    </div>\r\n\t\t      \t\t\r\n\t\t      \t</div>\r\n\r\n\t\t      </div>\t\t\r\n\t    \t);\r\n \t\t}\r\n \t\telse if(this.state.currentPage == \"AdminPage\")\r\n \t\t{\r\n \t\t\treturn (\r\n\t\t      <div className = \"Container\">\t\t\r\n\r\n\t\t      \t<div className = \"HomeHeader\">\r\n\t\t      \t\t<div className = \"PageTitle\">\r\n\t\t      \t\t\tAdmin page\r\n\t\t      \t\t</div>\r\n\t\t      \t\t<div className = \"NavLinks\">\r\n\t\t      \t\t\t<div>\r\n\t\t      \t\t\t\t<button onClick = {this.GoToHome.bind(this)}> Home </button> \r\n\t\t      \t\t\t\r\n\t\t      \t\t\t\t<button onClick = {this.LogOut.bind(this)}>Sign out</button> \r\n\t\t      \t\t\t</div>\r\n\t\t      \t\t</div>\r\n\t\t      \t</div>\r\n\r\n\t\t      \t<div className = \"Body\">\r\n\r\n\t\t      \t\t<div className = \"SearchComponent\">\r\n\t\t\t      \t\t\t<input type = \"text\" id = \"keyword\" className = \"HomeSearch\" placeholder = \"Enter keyword\" onChange = {this.handleSearchDoc.bind(this)}/>\r\n\t\t\t      \t\t\t<select onChange = {this.handleDocType.bind(this)}>\r\n\t\t\t      \t\t\t\t<option value = \"\"></option>\r\n\t\t\t      \t\t\t\t<option value = \"user\">User</option>\r\n\t\t\t      \t\t\t\t<option value = \"record\">Record</option>\r\n\t\t\t      \t\t\t</select>\r\n\t\t\t\t\t    \t<br/>\r\n\t\t\t\t\t    \t<button className = \"Search\" onClick = {this.AdminSearch.bind(this)} > Search </button>\r\n\t\t\t      \t</div>\r\n\r\n\t\t\t\t    <div className = \"ReviewsSection\">\r\n\t\t\t      \t\t\t{this.renderAdminRecords()}\r\n\t\t\t      \t</div>\r\n\t\t      \t\t\r\n\t\t      \t</div>\r\n\r\n\t\t      \t<div className = \"Footer\">\r\n\t\t      \t\t<div className = \"AddButton\">\r\n\t\t      \t\t \t<button className = \"TheAddNewReveiwButton\" onClick = {this.GoToAddReviews.bind(this)}>Add review</button> \r\n\t\t      \t\t</div>\r\n\t\t      \t</div>\r\n\t\t      \r\n\r\n\t\t      </div>\t\t\r\n\t    \t);\r\n \t\t}\r\n \t\telse if(this.state.currentPage == \"UpdateUser\")\r\n \t\t{\r\n \t\t\treturn (\r\n\t\t      <div className = \"AddReviewContainer\">\t\t\r\n\r\n\t\t      \t<div className = \"HomeHeader\">\r\n\t\t      \t\t<div className = \"PageTitle\">\r\n\t\t      \t\t\tEdit user\r\n\t\t      \t\t</div>\r\n\t\t      \t\t<div className = \"NavLinks\">\r\n\t\t      \t\t\t<div>\r\n\t\t      \t\t\t\t<button onClick = {this.GoToHome.bind(this)} > Home </button> \r\n\t\t      \t\t\t\t<button onClick = {this.GoToAdmin.bind(this)} >Admin</button> \r\n\t\t      \t\t\t\t<button onClick = {this.LogOut.bind(this)} >Sign out</button>  \r\n\t\t      \t\t\t</div>\r\n\t\t      \t\t</div>\r\n\t\t      \t</div>\r\n\r\n\t\t      \t<div className = \"AddReviewBody\">\r\n\r\n\t\t      \t\t<div className = \"myInputSection\">\r\n\r\n\t\t      \t\t\t<table>\r\n\t\t      \t\t\t\t<tr>\r\n\t\t      \t\t\t\t\t<td>\r\n\t\t      \t\t\t\t\t\t<h2> Username </h2>\r\n\t\t      \t\t\t\t\t\t<h3> {this.state.EditUsername} </h3>\r\n\t\t      \t\t\t\t\t</td>\r\n\t\t      \t\t\t\t\t\t\t\r\n\t\t      \t\t\t\t</tr>\r\n\t\t      \t\t\t\t\r\n\t\t      \t\t\t\t<tr>\r\n\t\t      \t\t\t\t\t<td> Admin user ? &nbsp;\r\n\t\t\t\t\t      \t\t\t<select className = \"SearchConditions\" value = {this.state.EditGenre} onChange = {this.handleAdminStatus.bind(this)} value = {this.state.EditAdminStatus}>\r\n\t\t\t\t\t\t\t\t\t    <option></option>\r\n\t\t\t\t                    \t<option value = \"true\">Yes</option>\r\n\t\t\t\t                    \t<option value = \"false\">No</option>    \t\r\n\t\t\t\t                    </select>\r\n\t\t      \t\t\t\t\t</td>\r\n\t\t      \t\t\t\t\t<td></td>\r\n\t\t      \t\t\t\t</tr>\r\n\t\t      \t\t\t</table>\r\n\r\n\t\t\t\t\t\t<div className = \"ReviewArea\">\t\t\t\t    \t\r\n\t\t\t\t\t    \t\r\n\t\t\t\t\t\t    \t<button onClick = {this.UpdateUser.bind(this)}  > Update user ! </button>\r\n\t\t\t\t\t\t    \t<button onClick = {this.GoToAdmin.bind(this)}  > Cancel </button>\r\n\t\t\t\t\t    \t</div>\r\n\t\t\t\t    </div>\r\n\t\t      \t\t\r\n\t\t      \t</div>\r\n\r\n\t\t      </div>\t\t\r\n\t    \t);\r\n \t\t}\r\n  \t}\r\n}\r\n \r\nexport default MainPage;\r\n\r\n",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":2,"column":10,"nodeType":"78","messageId":"79","endLine":2,"endColumn":14},{"ruleId":"76","severity":1,"message":"80","line":2,"column":16,"nodeType":"78","messageId":"79","endLine":2,"endColumn":21},{"ruleId":"76","severity":1,"message":"81","line":2,"column":24,"nodeType":"78","messageId":"79","endLine":2,"endColumn":37},{"ruleId":"76","severity":1,"message":"82","line":2,"column":40,"nodeType":"78","messageId":"79","endLine":2,"endColumn":50},{"ruleId":"76","severity":1,"message":"83","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":12},{"ruleId":"84","severity":1,"message":"85","line":70,"column":39,"nodeType":"86","messageId":"87","endLine":70,"endColumn":41},{"ruleId":"84","severity":1,"message":"85","line":95,"column":39,"nodeType":"86","messageId":"87","endLine":95,"endColumn":41},{"ruleId":"84","severity":1,"message":"85","line":133,"column":39,"nodeType":"86","messageId":"87","endLine":133,"endColumn":41},{"ruleId":"84","severity":1,"message":"88","line":256,"column":32,"nodeType":"86","messageId":"87","endLine":256,"endColumn":34},{"ruleId":"84","severity":1,"message":"88","line":256,"column":66,"nodeType":"86","messageId":"87","endLine":256,"endColumn":68},{"ruleId":"84","severity":1,"message":"85","line":267,"column":51,"nodeType":"86","messageId":"87","endLine":267,"endColumn":53},{"ruleId":"84","severity":1,"message":"85","line":303,"column":54,"nodeType":"86","messageId":"87","endLine":303,"endColumn":56},{"ruleId":"84","severity":1,"message":"88","line":334,"column":27,"nodeType":"86","messageId":"87","endLine":334,"endColumn":29},{"ruleId":"84","severity":1,"message":"88","line":334,"column":59,"nodeType":"86","messageId":"87","endLine":334,"endColumn":61},{"ruleId":"84","severity":1,"message":"88","line":366,"column":13,"nodeType":"86","messageId":"87","endLine":366,"endColumn":15},{"ruleId":"84","severity":1,"message":"85","line":380,"column":27,"nodeType":"86","messageId":"87","endLine":380,"endColumn":29},{"ruleId":"84","severity":1,"message":"85","line":388,"column":41,"nodeType":"86","messageId":"87","endLine":388,"endColumn":43},{"ruleId":"84","severity":1,"message":"85","line":417,"column":31,"nodeType":"86","messageId":"87","endLine":417,"endColumn":33},{"ruleId":"84","severity":1,"message":"85","line":417,"column":65,"nodeType":"86","messageId":"87","endLine":417,"endColumn":67},{"ruleId":"84","severity":1,"message":"85","line":417,"column":96,"nodeType":"86","messageId":"87","endLine":417,"endColumn":98},{"ruleId":"84","severity":1,"message":"85","line":417,"column":128,"nodeType":"86","messageId":"87","endLine":417,"endColumn":130},{"ruleId":"84","severity":1,"message":"85","line":417,"column":160,"nodeType":"86","messageId":"87","endLine":417,"endColumn":162},{"ruleId":"84","severity":1,"message":"85","line":446,"column":32,"nodeType":"86","messageId":"87","endLine":446,"endColumn":34},{"ruleId":"84","severity":1,"message":"85","line":456,"column":51,"nodeType":"86","messageId":"87","endLine":456,"endColumn":53},{"ruleId":"84","severity":1,"message":"85","line":477,"column":31,"nodeType":"86","messageId":"87","endLine":477,"endColumn":33},{"ruleId":"84","severity":1,"message":"85","line":477,"column":60,"nodeType":"86","messageId":"87","endLine":477,"endColumn":62},{"ruleId":"84","severity":1,"message":"85","line":477,"column":91,"nodeType":"86","messageId":"87","endLine":477,"endColumn":93},{"ruleId":"84","severity":1,"message":"85","line":477,"column":123,"nodeType":"86","messageId":"87","endLine":477,"endColumn":125},{"ruleId":"84","severity":1,"message":"85","line":477,"column":155,"nodeType":"86","messageId":"87","endLine":477,"endColumn":157},{"ruleId":"76","severity":1,"message":"89","line":484,"column":11,"nodeType":"78","messageId":"79","endLine":484,"endColumn":19},{"ruleId":"84","severity":1,"message":"85","line":496,"column":32,"nodeType":"86","messageId":"87","endLine":496,"endColumn":34},{"ruleId":"84","severity":1,"message":"85","line":507,"column":41,"nodeType":"86","messageId":"87","endLine":507,"endColumn":43},{"ruleId":"84","severity":1,"message":"85","line":533,"column":42,"nodeType":"86","messageId":"87","endLine":533,"endColumn":44},{"ruleId":"84","severity":1,"message":"85","line":557,"column":42,"nodeType":"86","messageId":"87","endLine":557,"endColumn":44},{"ruleId":"84","severity":1,"message":"88","line":604,"column":52,"nodeType":"86","messageId":"87","endLine":604,"endColumn":54},{"ruleId":"84","severity":1,"message":"85","line":641,"column":34,"nodeType":"86","messageId":"87","endLine":641,"endColumn":36},{"ruleId":"84","severity":1,"message":"85","line":649,"column":36,"nodeType":"86","messageId":"87","endLine":649,"endColumn":38},{"ruleId":"84","severity":1,"message":"85","line":666,"column":27,"nodeType":"86","messageId":"87","endLine":666,"endColumn":29},{"ruleId":"84","severity":1,"message":"85","line":723,"column":29,"nodeType":"86","messageId":"87","endLine":723,"endColumn":31},{"ruleId":"84","severity":1,"message":"85","line":736,"column":42,"nodeType":"86","messageId":"87","endLine":736,"endColumn":44},{"ruleId":"84","severity":1,"message":"85","line":762,"column":32,"nodeType":"86","messageId":"87","endLine":762,"endColumn":34},{"ruleId":"84","severity":1,"message":"85","line":774,"column":30,"nodeType":"86","messageId":"87","endLine":774,"endColumn":32},{"ruleId":"84","severity":1,"message":"85","line":797,"column":35,"nodeType":"86","messageId":"87","endLine":797,"endColumn":37},{"ruleId":"84","severity":1,"message":"85","line":818,"column":35,"nodeType":"86","messageId":"87","endLine":818,"endColumn":37},{"ruleId":"84","severity":1,"message":"85","line":867,"column":35,"nodeType":"86","messageId":"87","endLine":867,"endColumn":37},{"ruleId":"84","severity":1,"message":"85","line":960,"column":37,"nodeType":"86","messageId":"87","endLine":960,"endColumn":39},{"ruleId":"84","severity":1,"message":"85","line":1004,"column":35,"nodeType":"86","messageId":"87","endLine":1004,"endColumn":37},{"ruleId":"84","severity":1,"message":"85","line":1096,"column":35,"nodeType":"86","messageId":"87","endLine":1096,"endColumn":37},{"ruleId":"84","severity":1,"message":"85","line":1143,"column":35,"nodeType":"86","messageId":"87","endLine":1143,"endColumn":37},{"ruleId":"90","severity":1,"message":"91","line":1176,"column":132,"nodeType":"92","endLine":1176,"endColumn":168},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'BrowserRouter' is defined but never used.","'useHistory' is defined but never used.","'Card' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'tokenVal' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]